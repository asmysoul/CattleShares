<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiton.mapper.UserMapper">

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		user_id AS userId, user_name AS userName, password, grade,
		register_time AS registerTime, end_vip_time AS endVipTime, vip_status
		AS vipStatus, phone, gold, mark, account_type AS accountType,
		reflect_account AS reflectAccount
	</sql>



	<select id="selectUserList" resultType="VipManage">
		SELECT
		invi_acceptuserId AS inviAcceptuserid,
		invi_acceptuser AS
		inviAcceptuser,
		invi_acceptmobile AS inviAcceptmobile,
		invi_registtime
		AS inviRegisttime,
		user_name AS userName,
		grade AS grade,
		end_vip_time AS
		endVipTime,
		invi_gold AS inviGold,
		invi_mark AS inviMark ,
		count(*) AS
		count FROM invite i,USER u WHERE i.invi_username=u.`user_name` GROUP
		BY i.`invi_username`
	</select>


	<select id="selectUserListByTime" resultType="VipManage" parameterType="VipManage">
		SELECT invi_acceptuserId AS inviAcceptuserid,
		invi_acceptuser AS
		inviAcceptuser,
		invi_acceptmobile AS inviAcceptmobile,
		invi_registtime
		AS inviRegisttime,
		user_name AS userName,
		grade AS grade,
		end_vip_time AS
		endVipTime,
		invi_gold AS inviGold,
		invi_mark AS inviMark ,
		count(*) AS
		count FROM invite i,USER u WHERE i.invi_username=u.`user_name`

		 <if test="inviAcceptuser != null">
			AND i.invi_acceptuser = #{inviAcceptuser}
		</if>
		<if test="inviAcceptmobile != null">
			AND i.invi_acceptmobile = #{inviAcceptmobile}
		</if>
		
		<if test="inviAcceptuserid != null">
			AND i.invi_acceptuserId = #{inviAcceptuserid}
		</if>
		<if test="grade != null">
			AND u.grade = #{grade}
		</if>
		<if test="inviRegisttime != null">
			AND i.invi_registtime = #{inviRegisttime}
		</if> 
		GROUP BY i.`invi_username`
	</select>




	<select id="getSelectTime" resultType="VipManage" parameterType="SelectOptionTime">
		SELECT invi_acceptuserId AS inviAcceptuserid,
		invi_acceptuser AS
		inviAcceptuser,
		invi_acceptmobile AS inviAcceptmobile,
		invi_registtime
		AS inviRegisttime,
		user_name AS userName,
		grade AS grade,
		end_vip_time AS
		endVipTime,
		invi_gold AS inviGold,
		invi_mark AS inviMark ,
		count(*) AS
		count FROM invite i,USER u WHERE i.invi_username=u.`user_name`

		<!-- AND i.invi_acceptmobile = #{inviAcceptmobile} -->
		 <if test="firstTime != null">
			AND i.invi_registtime >= #{firstTime}
		</if>
		<if test="lastTime != null">
			AND i.invi_registtime <![CDATA[<=]]>  #{lastTime}
		</if>
		GROUP BY i.`invi_username`
	</select>
	
	
	
	<select id="getSelectUserSatate" resultType="VipManage" parameterType="java.lang.String">
		SELECT invi_acceptuserId AS inviAcceptuserid,
		invi_acceptuser AS
		inviAcceptuser,
		invi_acceptmobile AS inviAcceptmobile,
		invi_registtime
		AS inviRegisttime,
		user_name AS userName,
		grade AS grade,
		end_vip_time AS
		endVipTime,
		invi_gold AS inviGold,
		invi_mark AS inviMark ,
		count(*) AS
		count FROM invite i,USER u WHERE i.invi_username=u.`user_name`

		AND u.grade = #{userState}
		GROUP BY i.`invi_username`
	</select>
		
		
	<sql id="selectByCommandWhere">
		 <if test="userId != null">
			and user_id = #{userId} 
		</if>  
		 <if test="userName != null ">
			and user_name = #{userName}
		</if>
		<if test="accountType != null">
			and  account_type = #{accountType}
		</if>
		<if test="registerTime != null">
			and  register_time = #{registerTime}
		</if>  
	</sql>
		
	<select id="selectByCommandUser" resultType="User" parameterType="User">
		
		SELECT 
		user_id AS userId, user_name AS userName,  grade,
		register_time AS registerTime, end_vip_time AS endVipTime, vip_status
		AS vipStatus, phone, gold, mark, account_type AS accountType,
		reflect_account AS reflectAccount
		 FROM USER 
		 <where>
		 	<include refid="selectByCommandWhere"></include>
		 </where>
		 
	</select>
	
	
	<select id="getSelectUserByType" resultType="User" parameterType="java.lang.String">
		SELECT 
		user_id AS userId, user_name AS userName,  grade,
		register_time AS registerTime, end_vip_time AS endVipTime, vip_status
		AS vipStatus, phone, gold, mark, account_type AS accountType,
		reflect_account AS reflectAccount
		 FROM USER 
		where account_type=#{accountType}
	</select>
	
	<select id="getSelectVIPUserByTime" resultType="User" parameterType="SelectOptionTime">
		SELECT 
		user_id AS userId, user_name AS userName,  grade,
		register_time AS registerTime, end_vip_time AS endVipTime, vip_status
		AS vipStatus, phone, gold, mark, account_type AS accountType,
		reflect_account AS reflectAccount
		 FROM USER 
		 
		 where

		 <if test="firstTime != null">
			 register_time >= #{firstTime}
		</if>
		<if test="lastTime != null">
			AND register_time <![CDATA[<=]]>  #{lastTime}
		</if>
	</select>
	
</mapper>